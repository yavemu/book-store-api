version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bookstore-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      DB_USERNAME: ${DB_USERNAME:-user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_DATABASE: ${DB_DATABASE:-bookstore_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    networks:
      - bookstore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      target: dev
    container_name: bookstore-api
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-3000}
      - API_PORT=${API_PORT:-3000}
      - DB_HOST=postgres
      - DB_USERNAME=${DB_PORT:-5433}
      - DB_USERNAME=${DB_USERNAME:-user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-bookstore_db}
      - DATABASE_URL=postgresql://${DB_USERNAME:-user}:${DB_PASSWORD:-password}@postgres:5432/${DB_DATABASE:-bookstore_db}
      - JWT_SECRET=${JWT_SECRET:-supersecret}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - bookstore-network
    command: npm run start:dev

volumes:
  postgres_data:

networks:
  bookstore-network:
    driver: bridge